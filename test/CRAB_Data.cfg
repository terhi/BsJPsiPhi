[CRAB]

jobtype = cmssw
use_server = 0
scheduler = remoteGlidein

[CMSSW]

### ### Run2012 Datasets

### Run2012A
# datasetpath = /MuOnia/Run2012A-22Jan2013-v1/AOD

### Run2012B
# datasetpath = /MuOnia/Run2012B-22Jan2013-v1/AOD

### Run2012C
# datasetpath = /MuOnia/Run2012C-22Jan2013-v1/AOD

### Run2012D
# datasetpath = /MuOnia/Run2012D-22Jan2013-v1/AOD

### The ParameterSet you want to use
pset = Data.py

### Select JSON file (Cert_190456-208686_8TeV_22Jan2013ReReco_Collisions12_JSON.txt)
### FIXME
lumi_mask =

### Splitting parameters:
### Total number of events to be accessed: -1 means all
total_number_of_events = -1

### Analogous to events, lumis are used to split up analysis datasets
total_number_of_lumis = -1

### Number of jobs
### FIXME
number_of_jobs =

### FIXME
output_file =

allow_nonproductioncmssw = 1

[USER]

### FIXME
return_data =

### FIXME
copy_data =

### FIXME
thresholdLevel=

### FIXME
email=

### if copy_data = 1
### FIXME
storage_element =
user_remote_dir =

## IMPORTANT create the dir in castor (e.g.)
##           add the permission to it or all the jobs will crash :-)
#rfmkdir /castor/cern.ch/user/u/username/subdir
#rfchmod +775 /castor/cern.ch/user/u/username/subdir

Check_user_remote_dir = 0

#################################
####### JOB MONITORING  ### #####
#################################

### Use central BOSS DB instead of one for each task: the DB must be already been setup!
use_central_bossDB = 0

### Use Boss RealTime monitoring
use_boss_rt = 1

[GRID]
################################
###### EDG specific stuff ######
################################

# LCG middleware version installed on testbed
# lcg_version = 2


#remove_default_blacklist=1

## to change the CMS-broker RB. The ones available for CMS are "CERN" and "CNAF": the configuration
## files needed to change the broker will be automatically downloaded from CRAB web page. If the
## files are already present on the working directory they will be used.
rb = CERN

## CMS myproxy server, to proxy delegation
# proxy_server = myproxy.cern.ch

## Role in VOMS
#role = superman

## Group in VOMS
#group = superheros

## If you don't want CRAB to check your proxy
#dont_check_proxy = 1

## to add other requirements to jdl file, as example the Operating System
#requirements = (other.GlueHostOperatingSystemName == "RedHat")

## to add other parameters to jdl file: comma separated list, each item _must_
## be complete, including the closing ";"
# additional_jdl_parameters = AllowZippedISB = false;

## cpu time and wall_clock_time(=real time) in minutes. Written into the jdl file
#max_cpu_time = 60
#max_wall_clock_time = 60

## SE Black List: all the storage elements (SE) containing the following strings (comma
## separated list) will not be considered for submission.
## for discovery, please use http://cmslcgco01.cern.ch:8001/
#se_black_list = helsinki.fi
#se_black_list = dgc-grid-50.brunel.ac.uk, ppgrid1.rhul.ac.uk, t2-srm-02.lnl.infn.it, cmsdcache.pi.infn.it, lcg02.ciemat.es, lcg002.ihep.ac.cn
#ce_black_list = T2_IT_Bari
#se_black_list = ifca.es

## SE White List: only the storage elements (SE) containing the following strings (comma
## separated list) will be considered for submission.
## for discovery, please use http://cmslcgco01.cern.ch:8001/
#se_white_list = infn,cnaf,cscs,polgrid,desy,fzk,aachen,warsaw,T2_CN_Beijing
#se_white_list = cnaf

## CE Black List: all the CE whose name contains the following strings (comma
## separated list) will not be considered for submission.
## Use the dns domain (eg fnal, cern, ifae, fzk, cnaf, lnl,....)
#ce_black_list = edu
#ce_black_list = ametisti


## CE White List: only the CE whose name contains the following strings (comma
## separated list) will be considered for submission.
## Use the dns domain (eg fnal, cern, ifae, fzk, cnaf, lnl,....)
#ce_white_list = cnaf
#ce_white_list = infn,cnaf,cscs,polgrid,desy,fzk,aachen,warsaw,T2_CN_Beijing


## fields written into jdl
# virtual_organization = cms

## number or retry count
# retry_count = 4

## LFC catalog parameters
# lcg_catalog_type = lfc
# lfc_host = lfc-cms-test.cern.ch
# lfc_home = /grid/cms

[CONDORG]

# Set this to condor to override the batchsystem defined in gridcat.
#batchsystem = condor

# Specify addition condor_g requirments
# use this requirment to run on a cms dedicated hardare
# globus_rsl = (condor_submit=(requirements 'ClusterName == \"CMS\" && (Arch == \"INTEL\" || Arch == \"X86_64\")'))
# use this requirement to run on the new hardware
#globus_rsl = (condor_submit=(requirements 'regexp(\"cms-*\",Machine)'))

